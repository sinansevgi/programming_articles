require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe '/categories', type: :request do
  # Category. As you add validations to Category, be sure to
  # adjust the attributes here as well.
  let(:user) do
    User.create!(name: 'test')
  end

  let(:image) do
    Rack::Test::UploadedFile.new(Rails.root.join('spec/fixtures/files/github.png'), 'image/png', true)
  end

  let(:article) do
    Article.create!(title: 'test', text: 'test', author: user, image: image)
  end

  let(:valid_attributes) do
    { name: 'test', priority: 1 }
  end

  let(:invalid_attributes) do
    { name: 2, priority: 'test' }
  end

  before(:each) do
    visit login_path
    fill_in 'name', with: user.name
    click_button 'commit'
  end

  describe 'GET /index' do
    it 'renders a successful response' do
      Category.create! valid_attributes
      get root_url
      expect(response).to be_successful
    end
  end

  describe 'GET /show' do
    it 'renders a successful response' do
      category = Category.create! valid_attributes
      get category_url(category)
      expect(response).to be_successful
    end
  end

  describe 'GET /new' do
    it 'renders a successful response' do
      get new_category_url
      expect(response).to be_successful
    end
  end

  describe 'POST /create' do
    context 'with invalid parameters' do
      it 'does not create a new Category' do
        expect do
          post categories_url, params: { category: invalid_attributes }
        end.to change(Category, :count).by(0)
      end
    end
  end
end
